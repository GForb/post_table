version 13
class Variable {
    *Variable properties
    string varname
	string variable_label
    double decimal_places
	string percent_sign
	double n_all_records
    double include_completeness_percent
    string completeness 

    *Completeness
    double completeness_n
	string completeness_percent
	string completeness_n_percent
	string completeness_summary
	
    *Disticnt Records
    double n_distinct_nonmissing

}

prog .new
syntax varname, [label(string) decimal_places(integer 1) percent_sign completeness_percent completeness_summary(string)]
	.varname = "`varlist'"
	.set_variable_label `label'
    .decimal_places = `decimal_places'
    .set_percent_sign `percent_sign'
    .include_missing_complete_percent = "`completeness_percent'" != ""
    .completeness = "`completeness_summary'"
end

prog .set_percent_sign
    args percent_sign
    if "`percent_sign'" != "" {
        .percent_sign = "%"
    }
end  

prog .set_variable_label
	args label
	if `"`label'"' == "" {
        local label:variable label `.varname'
    }
    if `"`label'"' == "" {
        local label `.varname'
    }
    .variable_label = "`label'"
end

prog .calculate_stats 
    .count_all_records
	.count_completeness
    .set_completeness_summary
	.count_distinct_non_missing
end

prog .count_all_records
	qui count
	.n_all_records = r(N)
end

prog .count_completeness
    if "`.completeness'" != "missing" local not !
	qui count if `not'missing(`.varname')
	local numerator = r(N)
	.output_n_percent  `numerator' `.n_all_records' completeness
end



prog .count_distinct_non_missing, sortpreserve
	tempvar n_distinct
	by `.varname', sort: gen `n_distinct' = _n == 1 
	qui count if `n_distinct' & !missing(`.varname')
	.n_distinct_nonmissing = r(N)
end

prog .output_n_percent
	args numerator denominator name
    if "`name'" != "" local name `name'_
	
	local percent = `numerator'/`denominator'*100
	local percent_string = string(`percent', "%12.`.decimal_places'f")
    if "`.percent_sign'" != "" {
        	local percent_string `percent_string'%
    }
    
    .`name'n = `numerator'
	.`name'percent = "`percent_string'"
	.`name'n_percent = "`numerator' (`percent_string')"
end

prog set_completeness_summary
    if `.include_missing_complete_percent' {
        .completeness_summary = "`.completeness_n_percent'"
    }
    else {
        .completeness_summary = "`.completeness_n'"
    }
end
